{"version":3,"sources":["../../src/component/scenarioRunner.js"],"names":[],"mappings":"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","file":"scenarioRunner.js","sourcesContent":["import {check, root} from '../util.js';\nimport assert from 'assert';\nimport path from 'path';\nimport fs from 'fs';\nimport suspend from 'suspend';\nimport mime from 'mime';\nimport {fork} from 'child_process';\n\nexport function load(filePath) {\n  let fullPath;\n  if (path.isAbsolute(filePath)) {\n    fullPath = path.normalize(filePath);\n  } else {\n    fullPath = path.join(process.cwd(), filePath);\n  }\n  \n  return require(fullPath);\n}\n\nexport function run(scenario) {\n  check.function(scenario.fn);\n  check.string(scenario.name);\n  return new Promise((resolve) => {\n    let timeoutId;\n    const result = {\n      finalMessage: null,\n      warning: [],\n      info: [],\n      status: null,\n      files: [],\n      name: scenario.name\n    };\n    \n    const control = {\n      warning(text) {\n        return message(text, 'warning');\n      },\n      info(text) {\n        return message(text, 'info');\n      },\n      success(message = 'Passed') { return finish('success', message); },\n      failure(message = 'Failed') { return finish('failure', message); },\n      /** input can be either a path or content **/\n      file: suspend.promise(function*(name, input, media) {\n        if (result.status !== null) throw Error('Scenario is already finished!');\n        let fileContent;\n        \n        check.string(name);\n\n        if (typeof input === 'string') {\n          if (!path.isAbsolute(input)) {\n            throw Error('path should be absolute!');\n          }\n          const fileExists = yield fs.exists(input, suspend.resumeRaw());\n          if (!fileExists) {\n            throw Error(`File '${input}' doesn't exist!`);\n          }\n          \n          fileContent = yield fs.readFile(input, suspend.resume());\n        } else if (Buffer.prototype.isPrototypeOf(input)) {\n          fileContent = input;\n        } else {\n          throw Error('input should be either string or buffer!');\n        }\n\n        check.string(media);\n        const fileExtension = mime.extension(media);\n        if (!fileExtension) {\n          throw Error(`Unknown mime type: ${media}`);\n        }\n        \n        result.files.push({\n          name,\n          media,\n          content: fileContent\n        });\n        \n        return true;\n      })\n    };\n\n    function onError(err) {\n      control.failure(\n        'Scenario is broken! There was an unexpected error.\\n' +\n        `Stack: ${err.stack}\\n`\n      );\n    }\n\n    function onErrorHandler(err) {\n      clearTimeout(timeoutId);\n      onError(err);\n    }\n    \n    function message(text, type) {\n      if (result.status !== null) return false;\n      check.string(text);\n      result[type].push(text);\n      return true;\n    }\n\n    function finish(status, finalMessage) {\n      if (result.status !== null) return false;\n      process.removeListener('uncaughtException', onErrorHandler);\n\n      check.string(status);\n      check.either.string(finalMessage).or.error(finalMessage);\n      finalMessage = String(finalMessage);\n      const statuses = ['success', 'failure'];\n      assert(statuses.indexOf(status) !== -1, `Status can be only one of this values: ${statuses}`);\n      \n      clearTimeout(timeoutId);\n      result.finalMessage = finalMessage;\n      result.status = status;\n      resolve(result);\n      return true;\n    }\n    \n    const timeoutSecs = 10;\n    timeoutId = setTimeout(() => {\n      control.failure(`TIMEOUT: ${timeoutSecs} seconds.`);\n    }, timeoutSecs * 1000);\n\n    process.on('uncaughtException', onErrorHandler);\n    try {\n      scenario.fn(control);\n    } catch (e) {\n      onError(e);\n    }\n  });\n}\n\nexport function runForked(scenarioFile) {\n  check.string(scenarioFile);\n  return new Promise((resolve, reject) => {\n    const child = fork(path.join(root, 'index.js'), ['run', '--path', scenarioFile], {\n      silent: global.silentFork !== undefined ? global.silentFork : false\n    });\n    child.on('error', reject);\n    child.on('message', (result) => {\n      if (result.type === 'SCENARIO_RESULT') {\n        resolve(result.data);\n      }\n    });\n  });\n\n}\n\nexport function runGroup(scenarioFiles) {\n  return Promise.all(scenarioFiles.map(runForked));\n}\n"]}