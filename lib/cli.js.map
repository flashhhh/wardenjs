{"version":3,"sources":["../src/cli.js"],"names":[],"mappings":";;;;;;;;;;yBAAsB,WAAW;;;;2BACT,iBAAiB;;;;AAEzC,SAAS,OAAO,CAAC,SAAS,EAAE,IAAI,EAAiC;MAA/B,WAAW,yDAAG,EAAE;MAAE,IAAI,yDAAG,IAAI;;AAC7D,MAAI,WAAW,GAAG,IAAI,CAAC;AACvB,MAAI,IAAI,EAAE,WAAW,IAAI,GAAG,GAAG,IAAI,CAAC;;AAEpC,WAAS,CACN,OAAO,CAAC,WAAW,CAAC,CACpB,WAAW,CAAC,WAAW,CAAC,CACxB,MAAM,CAAC,YAAW;AACjB,WAAO,CAAC,CAAC,aAAa,GAAE,IAAI,EAAC,GAAG,CAAC,CAAC,mBAAC,SAAS,qBAAK,SAAS,GAAC,CAAC;GAC7D,CAAC,CAAC;CACN;;AAEM,SAAS,cAAc,CAAC,IAAI,EAAE;AACnC,MAAI,uBAAU,IAAI,CAAC,EAAE;AACnB,WAAO;GACR;AACD,SAAO,CAAC,GAAG,CAAC,CAAC,4BAA4B,GAAE,IAAI,EAAC,eAAe,CAAC,CAAC,CAAC;AAClE,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;;AAED,uBAAU,OAAO,CAAC,yBAAY,OAAO,CAAC,CAAC;AACvC,uBAAU,MAAM,CAAC,mBAAmB,EAAE,yBAAyB,CAAC,CAAC;AACjE,uBAAU,MAAM,CAAC,eAAe,EAAE,2BAA2B,CAAC,CAAC;AAC/D,uBAAU,MAAM,CAAC,gBAAgB,EAAE,2CAA2C,CAAC,CAAC;AAChF,uBAAU,MAAM,CAAC,mBAAmB,EAAE,4DAA4D,CAAC,CAAC;AACpG,uBAAU,MAAM,CAAC,QAAQ,EAAE,oCAAoC,CAAC,CAAC;AACjE,OAAO,yBAAY,OAAO,EAAE,yBAAyB,CAAC,CAAC;AACvD,OAAO,yBAAY,gBAAgB,EAAE,yCAAyC,CAAC,CAAC;AAChF,OAAO,yBAAY,KAAK,EAAE,sCAAsC,CAAC,CAAC;AAClE,OAAO,yBAAY,WAAW,EAAE,gDAAgD,CAAC,CAAC;AAClF,OAAO,yBAAY,QAAQ,EACzB,4FAA4F,CAAC,CAAC;;AAEhG,MAAM,OAAO,GAAG,uBAAU,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC9C,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AACvC,SAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;AACjD,SAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;;AAED,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AACjC,yBAAU,UAAU,EAAE,CAAC;CACxB","file":"cli.js","sourcesContent":["import commander from 'commander';\nimport packageJson from '../package.json';\n\nfunction command(commander, name, description = '', args = null) {\n  let commandText = name;\n  if (args) commandText += ' ' + args;\n  \n  commander\n    .command(commandText)\n    .description(description)\n    .action(function() {\n      require(`./controller/${name}.js`)(commander, ...arguments);\n    });\n}\n\nexport function optionRequired(name) {\n  if (commander[name]) {\n    return;\n  }\n  console.log(`Please, specify the option \"${name}\"! (see --help)`);\n  process.exit(1);\n}\n\ncommander.version(packageJson.version);\ncommander.option('--config <config>', 'Path to the config file');\ncommander.option('--path <path>', 'Path to the scenario file');\ncommander.option('--group <name>', 'The name of the group of scenarios to run');\ncommander.option('--run-mode <mode>', 'Mode of running multiple scenarios. async (default) | sync');\ncommander.option('--save', 'Save the result(s) to the database');\ncommand(commander, 'check', 'Check whether all is ok');\ncommand(commander, 'list-scenarios', 'Get list of the all available scenarios');\ncommand(commander, 'run', 'Run a scenario and print the results');\ncommand(commander, 'run-group', 'Run a group of scenarios and print the results');\ncommand(commander, 'daemon',\n  'Launch a daemon to run scenarios according to a schedule and run web-server to see results');\n\nconst program = commander.parse(process.argv);\nif (typeof program.args[0] !== 'object') {\n  console.log('Wrong usage. Please, check --help');\n  process.exit(1);\n}\n\nif (!process.argv.slice(2).length) {\n  commander.outputHelp();\n}\n\n"]}